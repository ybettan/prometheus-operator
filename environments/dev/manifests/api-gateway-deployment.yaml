apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/instance: observatorium-xyz
    app.kubernetes.io/name: observatorium-api-gateway
    app.kubernetes.io/part-of: observatorium
    app.kubernetes.io/version: master-2020-04-16-v0.1.0-2-g2a4aa00
  name: observatorium-xyz-observatorium-api-gateway
  namespace: observatorium
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: api-gateway
      app.kubernetes.io/instance: observatorium-xyz
      app.kubernetes.io/name: observatorium-api-gateway
      app.kubernetes.io/part-of: observatorium
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/component: api-gateway
        app.kubernetes.io/instance: observatorium-xyz
        app.kubernetes.io/name: observatorium-api-gateway
        app.kubernetes.io/part-of: observatorium
        app.kubernetes.io/version: master-2020-04-16-v0.1.0-2-g2a4aa00
    spec:
      containers:
      - args:
        - --web.listen=0.0.0.0:8080
          #- --tls-cert-file=/mnt/certs/server.pem
          #- --tls-client-ca-file=/mnt/certs/ca.pem
          #- --tls-private-key-file=/mnt/certs/server.key
        - --metrics.ui.endpoint=http://observatorium-xyz-observatorium-api-gateway-thanos-query.observatorium.svc.cluster.local:9090
        - --metrics.read.endpoint=http://observatorium-xyz-cortex-query-frontend.observatorium.svc.cluster.local:9090/api/v1
        - --metrics.write.endpoint=http://observatorium-xyz-thanos-receive.observatorium.svc.cluster.local:19291/api/v1/receive
        - --log.level=debug
        image: quay.io/observatorium/observatorium:master-2020-04-16-v0.1.0-2-g2a4aa00
        volumeMounts:
          - name: tls-certs
            mountPath: "/mnt/certs"
            readOnly: true
        #livenessProbe:
        #  failureThreshold: 8
        #  httpGet:
        #    path: /-/healthy
        #    port: 8080
        #    scheme: HTTPS
        #  periodSeconds: 30
        livenessProbe:
          tcpSocket:
            port: 8080
        name: observatorium-api-gateway
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          tcpSocket:
            port: 8080
        #readinessProbe:
        #  failureThreshold: 20
        #  httpGet:
        #    path: /-/ready
        #    port: 8080
        #    scheme: HTTPS
        #  periodSeconds: 5
      volumes:
        - name: "tls-certs"
          secret:
            secretName: tls-certs
